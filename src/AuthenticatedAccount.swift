//
//  AuthenticatedAccount.swift
//  Macchiato
//
//  Created by Jeremy W. Sherman on 2019-04-24.
//  Copyright Â© 2019 Jeremy W. Sherman. All rights reserved.
//

import Foundation

extension AuthenticatedAccount {
    static func makeFake() -> AuthenticatedAccount {
        return AuthenticatedAccount(account: AuthenticatedAccountMeta.makeFake(), distributors: [], isActive: true, updatedUnix: 0)
    }
}

extension AuthenticatedAccountMeta {
    static func makeFake() -> AuthenticatedAccountMeta {
        return AuthenticatedAccountMeta(displayName: "me", avatarURL: "", type: "account.madeup", isYou: true, createdUnix: 0, updatedUnix: 0)
    }
}

// MARK: Generated by app.quicktype.io
/* Input:

 {"account":{"display_name":"jws","avatar_url":"jws.jpeg","type":"account.normal","is_you":false,"created_at":"2016-02-17T04:05:36Z","created_unix":1455681936,"updated_at":"2018-07-30T14:39:26Z","updated_unix":1532961566},"distributors":[{"guid":"15e9cdba-9407-11e8-bbd7-54ee758049c3","name":"jws","display":"jws","avatar":"https:\/\/jws.10centuries.org\/avatars\/jws.jpeg","is_active":true,"channels":[{"channel_guid":"73d46790-9409-11e8-bbd7-54ee758049c3","site_guid":"436255ec-1549-cc18-e019-8acfa79faab9","site_name":"A Lovely 10Centuries Blog","url":"https:\/\/jws.10centuries.org"},{"channel_guid":"73d46923-9409-11e8-bbd7-54ee758049c3","site_guid":"ac240f2c-8677-54e4-6e05-204f8078c40d","site_name":"Macchiato","url":"https:\/\/macchiato.10centuries.org"}]}],"is_active":true,"updated_at":"2019-04-25T03:10:07Z","updated_unix":1556161807}
 */
struct AuthenticatedAccount: Codable {
    let account: AuthenticatedAccountMeta
    let distributors: [Distributor]
    let isActive: Bool
    let updatedUnix: Int

    enum CodingKeys: String, CodingKey {
        case account, distributors
        case isActive = "is_active"
        case updatedUnix = "updated_unix"
    }
}

struct AuthenticatedAccountMeta: Codable {
    let displayName, avatarURL, type: String
    let isYou: Bool
    let createdUnix: Int
    let updatedUnix: Int

    enum CodingKeys: String, CodingKey {
        case displayName = "display_name"
        case avatarURL = "avatar_url"
        case type
        case isYou = "is_you"
        case createdUnix = "created_unix"
        case updatedUnix = "updated_unix"
    }
}

struct Distributor: Codable {
    let guid, name, display: String
    let avatar: String
    let isActive: Bool
    let channels: [Channel]

    enum CodingKeys: String, CodingKey {
        case guid, name, display, avatar
        case isActive = "is_active"
        case channels
    }
}

struct Channel: Codable {
    let channelGUID: String
    let isPrivate: Bool
    let siteGUID, siteName: String
    let url: String

    enum CodingKeys: String, CodingKey {
        case channelGUID = "channel_guid"
        case isPrivate = "is_private"
        case siteGUID = "site_guid"
        case siteName = "site_name"
        case url
    }
}
